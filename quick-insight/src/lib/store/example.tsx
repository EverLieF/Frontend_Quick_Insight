/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Zustand stores –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ stores
 * –≤ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 */

import React, { useEffect } from 'react';
import { 
  useNewsSelectors, 
  useFilterSelectors, 
  useThemeManager,
  useNotificationManager,
  useGlobalLoading,
  useGlobalErrors 
} from './index';

// –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
export const NewsListExample: React.FC = () => {
  const { 
    currentPageArticles, 
    pagination, 
    loading, 
    setPage,
    markAsRead,
    toggleBookmark 
  } = useNewsSelectors();
  
  const { activeFilters, setFilter, clearFilters } = useFilterSelectors();
  const { isDarkMode, toggleTheme } = useThemeManager();
  const { showSuccess, showError } = useNotificationManager();
  const { isLoading } = useGlobalLoading();
  const { hasErrors } = useGlobalErrors();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const loadData = async () => {
      try {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å loadArticles() –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        showSuccess('–ù–æ–≤–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
      } catch (error) {
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π');
      }
    };

    loadData();
  }, [showSuccess, showError]);

  const handleFilterChange = (category: string) => {
    setFilter('category', category);
  };

  const handlePageChange = (page: number) => {
    setPage(page);
  };

  const handleMarkAsRead = (articleId: string) => {
    markAsRead(articleId);
    showSuccess('–°—Ç–∞—Ç—å—è –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–∞—è');
  };

  const handleToggleBookmark = (articleId: string) => {
    toggleBookmark(articleId);
    showSuccess('–ó–∞–∫–ª–∞–¥–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
  };

  if (isLoading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π...</div>
      </div>
    );
  }

  if (hasErrors) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-red-500">–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö</div>
      </div>
    );
  }

  return (
    <div className={`p-6 ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-white text-gray-900'}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–º —Ç–µ–º—ã */}
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold">–ù–æ–≤–æ—Å—Ç–∏</h1>
        <button
          onClick={toggleTheme}
          className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
        >
          {isDarkMode ? '‚òÄÔ∏è' : 'üåô'} {isDarkMode ? '–°–≤–µ—Ç–ª–∞—è' : '–¢–µ–º–Ω–∞—è'} —Ç–µ–º–∞
        </button>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div className="mb-6 p-4 border rounded-lg">
        <h2 className="text-lg font-semibold mb-4">–§–∏–ª—å—Ç—Ä—ã</h2>
        <div className="flex gap-4 flex-wrap">
          <select
            value={activeFilters.category || 'all'}
            onChange={(e) => handleFilterChange(e.target.value)}
            className="px-3 py-2 border rounded"
          >
            <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            <option value="politics">–ü–æ–ª–∏—Ç–∏–∫–∞</option>
            <option value="science">–ù–∞—É–∫–∞</option>
            <option value="history">–ò—Å—Ç–æ—Ä–∏—è</option>
            <option value="research">–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</option>
            <option value="finance">–§–∏–Ω–∞–Ω—Å—ã</option>
          </select>
          
          <button
            onClick={() => clearFilters()}
            className="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600"
          >
            –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π */}
      <div className="space-y-4">
        {currentPageArticles.map((article) => (
          <div
            key={article.id}
            className={`p-4 border rounded-lg ${
              isDarkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'
            }`}
          >
            <div className="flex justify-between items-start mb-2">
              <h3 className="text-lg font-semibold">{article.title}</h3>
              <div className="flex gap-2">
                <button
                  onClick={() => handleMarkAsRead(article.id)}
                  className={`px-2 py-1 text-xs rounded ${
                    article.isRead 
                      ? 'bg-green-500 text-white' 
                      : 'bg-gray-500 text-white hover:bg-gray-600'
                  }`}
                >
                  {article.isRead ? '‚úì –ü—Ä–æ—á–∏—Ç–∞–Ω–æ' : '–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º'}
                </button>
                <button
                  onClick={() => handleToggleBookmark(article.id)}
                  className={`px-2 py-1 text-xs rounded ${
                    article.isBookmarked 
                      ? 'bg-yellow-500 text-white' 
                      : 'bg-gray-500 text-white hover:bg-gray-600'
                  }`}
                >
                  {article.isBookmarked ? '‚òÖ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º' : '‚òÜ –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
                </button>
              </div>
            </div>
            
            <p className="text-gray-600 mb-2">{article.excerpt}</p>
            
            <div className="flex justify-between items-center text-sm text-gray-500">
              <div className="flex gap-4">
                <span>üë§ {article.author.name}</span>
                <span>üìÖ {article.publishedAt.toLocaleDateString()}</span>
                <span>‚è±Ô∏è {article.readTime} –º–∏–Ω</span>
                <span>üëÅÔ∏è {article.views || 0}</span>
              </div>
              <span className={`px-2 py-1 rounded text-xs ${
                article.category.color ? `bg-[${article.category.color}]` : 'bg-blue-500'
              } text-white`}>
                {article.category.name}
              </span>
            </div>
          </div>
        ))}
      </div>

      {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
      {pagination.totalPages > 1 && (
        <div className="flex justify-center items-center gap-2 mt-8">
          <button
            onClick={() => handlePageChange(pagination.currentPage - 1)}
            disabled={pagination.currentPage === 1}
            className="px-3 py-2 border rounded disabled:opacity-50 disabled:cursor-not-allowed"
          >
            ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è
          </button>
          
          <span className="px-4 py-2">
            –°—Ç—Ä–∞–Ω–∏—Ü–∞ {pagination.currentPage} –∏–∑ {pagination.totalPages}
          </span>
          
          <button
            onClick={() => handlePageChange(pagination.currentPage + 1)}
            disabled={pagination.currentPage === pagination.totalPages}
            className="px-3 py-2 border rounded disabled:opacity-50 disabled:cursor-not-allowed"
          >
            –°–ª–µ–¥—É—é—â–∞—è ‚Üí
          </button>
        </div>
      )}
    </div>
  );
};

// –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ UI store
export const UIExample: React.FC = () => {
  const { theme, setTheme } = useThemeManager();
  const { addNotification, clearNotifications } = useNotificationManager();

  const handleShowNotification = (type: 'success' | 'error' | 'info' | 'warning') => {
    const messages = {
      success: '–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!',
      error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏',
      info: '–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      warning: '–í–Ω–∏–º–∞–Ω–∏–µ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
    };

    addNotification({
      type,
      title: type === 'success' ? '–£—Å–ø–µ—Ö' : 
             type === 'error' ? '–û—à–∏–±–∫–∞' :
             type === 'info' ? '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' : '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
      message: messages[type],
      duration: 3000,
    });
  };

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold mb-4">UI Store –ü—Ä–∏–º–µ—Ä—ã</h2>
      
      <div className="space-y-4">
        {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–æ–π */}
        <div className="p-4 border rounded">
          <h3 className="font-semibold mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–æ–π</h3>
          <div className="flex gap-2">
            <button
              onClick={() => setTheme('light')}
              className={`px-3 py-2 rounded ${theme === 'light' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}
            >
              –°–≤–µ—Ç–ª–∞—è
            </button>
            <button
              onClick={() => setTheme('dark')}
              className={`px-3 py-2 rounded ${theme === 'dark' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}
            >
              –¢–µ–º–Ω–∞—è
            </button>
            <button
              onClick={() => setTheme('system')}
              className={`px-3 py-2 rounded ${theme === 'system' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}
            >
              –°–∏—Å—Ç–µ–º–Ω–∞—è
            </button>
          </div>
        </div>

        {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
        <div className="p-4 border rounded">
          <h3 className="font-semibold mb-2">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
          <div className="flex gap-2 flex-wrap">
            <button
              onClick={() => handleShowNotification('success')}
              className="px-3 py-2 bg-green-500 text-white rounded hover:bg-green-600"
            >
              –£—Å–ø–µ—Ö
            </button>
            <button
              onClick={() => handleShowNotification('error')}
              className="px-3 py-2 bg-red-500 text-white rounded hover:bg-red-600"
            >
              –û—à–∏–±–∫–∞
            </button>
            <button
              onClick={() => handleShowNotification('info')}
              className="px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
            >
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </button>
            <button
              onClick={() => handleShowNotification('warning')}
              className="px-3 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600"
            >
              –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            </button>
            <button
              onClick={clearNotifications}
              className="px-3 py-2 bg-gray-500 text-white rounded hover:bg-gray-600"
            >
              –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default NewsListExample;
